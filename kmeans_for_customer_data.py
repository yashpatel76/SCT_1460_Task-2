# -*- coding: utf-8 -*-
"""Kmeans_for_customer_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sdGn2ri4twW9xMTKxXcooNUh3Z0rS3BO
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

#load dataset
df = pd.read_csv('/content/sample_data/Mall_Customers.csv')
df.head()
df.info()
df.columns

X = df[['Annual Income (k$)','Spending Score (1-100)']]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

wcss = [] #Within-Cluster Sum of Squares

for i in range(1,11):
  kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
  kmeans.fit(X_scaled)
  wcss.append(kmeans.inertia_)

plt.figure(figsize=(10,5))
plt.plot(range(1,11),wcss, marker='o')
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('Within-Cluster Sum of Squares')
plt.grid(True)
plt.show()


kmeans =KMeans(n_clusters=5, init='k-means++', random_state=42)
y_kmeans = kmeans.fit_predict(X_scaled)

df['cluster'] = y_kmeans

plt.figure(figsize=(10,5))
colors = ['red', 'blue', 'green', 'cyan', 'magenta']
for i in range(5):
  plt.scatter(
      X[y_kmeans == i]['Annual Income (k$)'],
      X[y_kmeans == i]['Spending Score (1-100)'],
      s=100, c=colors[i], label = f'Cluster {i}'
  )

centroids = scaler.inverse_transform(kmeans.cluster_centers_)
plt.scatter(
    centroids[:,0],centroids[:,1],
    s=300, c='yellow', label='Centroids', marker='X'
)

plt.title('Customer Segments')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.grid(True)
plt.show()